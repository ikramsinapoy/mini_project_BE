// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"
	users "foodcal/business/users"

	mock "github.com/stretchr/testify/mock"
)

// UserRepoInterface is an autogenerated mock type for the UserRepoInterface type
type UserRepoInterface struct {
	mock.Mock
}

// Login provides a mock function with given fields: domain, ctx
func (_m *UserRepoInterface) Login(domain users.Domain, ctx context.Context) (users.Domain, error) {
	ret := _m.Called(domain, ctx)

	var r0 users.Domain
	if rf, ok := ret.Get(0).(func(users.Domain, context.Context) users.Domain); ok {
		r0 = rf(domain, ctx)
	} else {
		r0 = ret.Get(0).(users.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(users.Domain, context.Context) error); ok {
		r1 = rf(domain, ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: domain
func (_m *UserRepoInterface) Register(domain *users.Domain) (users.Domain, error) {
	ret := _m.Called(domain)

	var r0 users.Domain
	if rf, ok := ret.Get(0).(func(*users.Domain) users.Domain); ok {
		r0 = rf(domain)
	} else {
		r0 = ret.Get(0).(users.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*users.Domain) error); ok {
		r1 = rf(domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
